@function convertPixelsToRem($value) {
	$remValue: calc($value / 16) + rem;
	@return $remValue;
}

@function getLineHeight($lineHeightPx, $fontPx) {
	$lineHeightValue: calc($lineHeightPx / $fontPx);
	@return $lineHeightValue;
}

@function responsiveValue($min-resolution, $max-resolution, $px-value, $vh-value) {
	$min-resolution-px: $min-resolution * 16; // Преобразуем минимальное разрешение в пиксели
	$max-resolution-px: $max-resolution * 16; // Преобразуем максимальное разрешение в пиксели

	@if ($min-resolution-px > $max-resolution-px) {
		@return #{$px-value}px;
	} @else {
		@return #{$vh-value}vh;
	}
}
//принимает в себя 3 параметра
//общее растояние
//размер объекта
//желаемое растояние
@function sizeObjectFun($totalDistance, $sizeObject, $desiredDistance) {
	$resultTest: calc(($totalDistance - $sizeObject) / 2);
	@if ($resultTest > $desiredDistance) {
		@if ($resultTest > 0) {
			@return $resultTest;
		} @else {
			@return $desiredDistance;
		}
	} @else {
		@return $desiredDistance;
	}
}

// Функция strip-unit удаляет единицы измерения из числового значения.
@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1); // Деление на 0+1 удаляет единицы измерения
	}

	@return $number;
}

// Функция calcFluidFontSize рассчитывает размер шрифта в зависимости от ширины экрана.

// font-size: calc( (100vw - Vmin)/(Vmax - Vmin) * (Fmax - Fmin) + Fmin);
// font-size: calc( (100vw - 480px)/(1280 - 480) * (24 - 16) + 16px);
//. Например, при ширине экрана в 480px иметь ровно 16px, а при 1280px — 24px.
// Единицы измерений можно использовать любые, главное, чтобы они совпадали. Тоже самое, только в rem:
// font-size: calc( (100vw - 30rem)/(80 - 30) * (1.5 - 1) + 1rem);

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
	$f-min: strip-unit($f-min);
	$f-max: strip-unit($f-max);
	$w-min: strip-unit($w-min);
	$w-max: strip-unit($w-max);

	// $k: ($f-max - $f-min)/($w-max - $w-min);// Расчет коэффициента
	// $b: $f-min - $k * $w-min;// Расчет свободного члена

	// $b: $b + $units; // Добавление единиц измерения к свободному члену

	// @return calc( #{$k} * 100vw + #{$b} );
	@return calc(
		(100vw - #{$w-min + $units}) / (#{$w-max} - #{$w-min}) * (#{$f-max} - #{$f-min}) + #{$f-min +
			$units}
	);
	// Возврат выражения calc() с использованием коэффициента и свободного члена

	// font-size: calcFluidFontSize( 28px, 90px ,$width__tablet__mini_lower, $width__pc_full);
}

//================= mobile ===================
@media screen and (max-width: $width__phone_upper) {
}

//========================= desktop =======================
@media screen and (min-width: $width__pc_full) {
}

//========================= adaptive layout=======================
@media screen and (min-width: $width__tablet__mini_lower) and (max-width: $width__pc_full) {
}
